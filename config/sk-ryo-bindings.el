;; modal bindings
(ryo-modal-keys
 ;; which key
 ("?" which-key-show-top-level)
 ;; selecting
 ("V" "C-SPC")
 ;; motion
 ("G" "M->")
 ("0" "C-a")
 ("$" "C-e")
 ("H" "C-x >")
 ("J" "C-v")
 ("K" "M-v")
 ("L" "C-x <")
 ("n" "M-n")
 ("N" "M-p")
 ;; navigation
 ("c d" "C-x d")
 ("DEL" mode-line-other-buffer)
 ("W" dired-jump)
 ("+" bookmark-set)
 ("g %" woman)
 ("[" flycheck-previous-error)
 ("]" flycheck-next-error)
 ("g RET" avy-flycheck-goto-error)
 ("w w" ace-window)
 ;; ("w w" other-window)
 ("w h" windmove-left)
 ("w j" windmove-down)
 ("w k" windmove-up)
 ("w l" windmove-right)
 ("w [" shrink-window-horizontally)
 ("w {" shrink-window)
 ("w }" enlarge-window)
 ("w ]" enlarge-window-horizontally)
 ("w x" sk/rotate-windows)
 ("w q" delete-window)
 ("w o" delete-other-windows)
 ("w f" find-file-other-window)
 ("w v" sk/split-right-and-move)
 ("w s" sk/split-below-and-move)
 ("w =" balance-windows)
 ;; ("w a" sk/split-right-and-move :then (mode-line-other-buffer))
 ("w i" sk/interleave-other-window-note)
 ("w n" sk/interleave-other-window-next)
 ("w p" sk/interleave-other-window-previous)
 ("Z" sk/toggle-frame-fullscreen-non-native)
 ("z" recenter-top-bottom)
 ("/" "C-s")
 ;; editing
 ("a" forward-char :exit t)
 ("I" sk/smarter-move-beginning-of-line :exit t)
 ("A" move-end-of-line :exit t)
 ("S" hydra-smartparens/body)
 ("u" "C-/")
 ("U" "M-/")
 ("q" "C-x (")
 ("Q" "C-x )")
 ("@" kmacro-end-or-call-macro-repeat)
 ("^" "C-x q")
 ;; eyebrowse configurations
 ("-" eyebrowse-switch-to-window-config)
 ("_" eyebrowse-last-window-config)
 ("g t" eyebrowse-create-window-config)
 ("g T" eyebrowse-close-window-config)
 ("g 0" eyebrowse-switch-to-window-config-0)
 ("g 1" eyebrowse-switch-to-window-config-1)
 ("g 2" eyebrowse-switch-to-window-config-2)
 ("g 3" eyebrowse-switch-to-window-config-3)
 ("g 4" eyebrowse-switch-to-window-config-4)
 ("g 5" eyebrowse-switch-to-window-config-5)
 ("g 6" eyebrowse-switch-to-window-config-6)
 ("g 7" eyebrowse-switch-to-window-config-7)
 ("g 8" eyebrowse-switch-to-window-config-8)
 ("g 9" eyebrowse-switch-to-window-config-9)
 ("g _" eyebrowse-rename-window-config)
 ;; mapping to prefixes
 (":" "C-x")
 ("\\" "C-u")
 ;; numbers
 ("1" "M-1")
 ("2" "M-2")
 ("3" "M-3")
 ("4" "M-4")
 ("5" "M-5")
 ("6" "M-6")
 ("7" "M-7")
 ("8" "M-8")
 ("9" "M-9")
 ;; movement
 ("h" "C-b")
 ("j" "C-n")
 ("k" "C-p")
 ("l" "C-f")
 ;; Misc
 ("SPC g" "C-g")
 ("m ," compile)
 ("|" text-scale-increase)
 ("g !" sk/shell)
 ("g $" sk/term)
 ("&" eshell-git-prompt-use-theme)
 ;; marks
 ("<up>" back-button-local-backward)
 ("<down>" back-button-local-forward)
 ("<left>" back-button-global-backward)
 ("<right>" back-button-global-forward))

;; mapping with leader
(ryo-modal-key "SPC"
               '(("w" "C-x C-s")
                 ("e" magit-status)
                 ("f" "C-x C-f")
                 ("h" "C-h")
                 ("y" "M-y")
                 ("k" "C-x C-b")
				 ("l" flycheck-list-errors)
				 ("m" sk/markdown-wiki-index)
				 ("a" sk/markdown-diary-index)
                 ("j" "M-x")
                 ("q" "C-c b")))

;; mapping with global prefix
(ryo-modal-key "g"
               '(("g" "M-<")
				 ("A" describe-char)
				 ("b" magit-blame)
				 ("f" ffap)
				 ("F" "C-c C-f")
				 ("d" indent-tools-hydra/body)
				 ("D" dash-at-point-with-docset)
				 ("W" wdired-change-to-wdired-mode)
				 ("j" diff-hl-next-hunk)
				 ("k" diff-hl-previous-hunk)
				 ("h" diff-hl-diff-goto-hunk)
				 ("H" diff-hl-revert-hunk)
				 ("i" string-inflection-all-cycle)
				 ("v" "C-x C-x")
				 ("w" widen)
				 ("O" package-install)
				 ("@" kmacro-name-last-macro)
				 ("~" kmacro-bind-to-key)
				 ("`" async-shell-command)
				 ("<" goto-last-change)
				 (">" goto-last-change-reverse)
				 ;; ("M" paradox-list-packages)
				 ("SPC" "C-c C-c")
				 ("TAB" org-mobile-push)
				 ("DEL" org-mobile-pull)
				 ("M" list-packages)
				 ("|" text-scale-decrease)
				 ("?" beacon-blink)
				 ("V" sk/browse-current-file)
				 ("N" sk/rename-current-buffer-file)
				 ("K" sk/delete-current-buffer-file)
				 ("Y" sk/copy-current-file-path)
                 ("." sk/duplicate-current-line-or-region)))

;; mapping for change
(ryo-modal-key "C" 'sp-kill-hybrid-sexp :exit t)
(ryo-modal-key "c y" 'sk/cut-region-or-line-to-clipboard :exit t)
(sk/ryo-operator-object change "c" "c" sk/change-region-or-line)
(sk/ryo-change-bindings)

;; mapping for delete
(ryo-modal-key "D" 'sp-kill-hybrid-sexp)
(ryo-modal-key "d y" 'sk/cut-region-or-line-to-clipboard)
(sk/ryo-operator-object delete "d" "d" sk/kill-region-or-line)
(sk/ryo-delete-bindings)

;; mapping for copy
(ryo-modal-key "Y" 'sk/copy-to-end-of-line)
(ryo-modal-key "y p" 'sk/paste-from-clipboard)
(sk/ryo-operator-object yank "y" "y" sk/copy-region-or-line)
(sk/ryo-yank-bindings)

;; mapping for expand region - this is not like a normal operator and textobject
(ryo-modal-keys
 ("v"
  (("y" sk/copy-region-or-line-to-clipboard)
   ("v" er/expand-region)
   ("TAB" mark-whole-buffer :then (indent-region))
   ("i a" mark-whole-buffer)
   ("a a" mark-whole-buffer)
   ("i w" er/mark-word)
   ("a w" sk/mark-around-word)
   ("i k" sk/mark-inside-markdown-code-block)
   ("a k" sk/mark-around-markdown-code-block)
   ("i p" er/mark-text-paragraph)
   ("a p" mark-paragraph)
   ("i i" indent-tools-select)
   ("a i" sk/select-indent-tree)
   ("i s" er/mark-text-sentence)
   ("a s" er/mark-text-sentence)
   ("i l" sk/select-inside-line)
   ("a l" sk/select-around-line)
   ("i y" er/mark-symbol)
   ("a y" sk/mark-around-symbol)
   ("i c" er/mark-comment)
   ("a c" er/mark-comment)
   ("i f" er/mark-defun)
   ("a f" er/mark-defun)
   ("i h" diff-hl-mark-hunk)
   ("a h" diff-hl-mark-hunk)
   ("i q" er/mark-inside-quotes)
   ("a q" er/mark-outside-quotes)
   ("i b" er/mark-inside-pairs)
   ("a b" er/mark-outside-pairs)
   ("i o" sk/mark-inside-org-code)
   ("a o" er/mark-org-code-block)
   ("i u" sk/mark-inside-subtree)
   ("a u" org-mark-subtree)
   ("i e" er/mark-LaTeX-inside-environment)
   ("a e" LaTeX-mark-environment)
   ("i r" er/mark-method-call)
   ("a r" er/mark-method-call)
   ("i d" sk/mark-inside-ruby-block)
   ("a d" er/mark-method-call)
   ("i g" er/mark-inside-python-string)
   ("a g" er/mark-outside-python-string)
   ("i m" sk/mark-inside-python-block)
   ("a m" er/mark-outer-python-block)
   ("i n" er/mark-python-statement)
   ("a n" er/mark-python-block-and-decorator)
   ("i $" er/mark-LaTeX-math)
   ("a $" sk/mark-inside-LaTeX-math)
   ("i x" LaTeX-mark-section)
   ("a x" LaTeX-mark-section)
   (";" set-mark-command :then (avy-goto-line))
   ("'" set-mark-command :then (avy-resume))
   ("f" set-mark-command :then (avy-goto-char-in-line))
   ("F" set-mark-command :then (avy-goto-char-2))
   ("t" set-mark-command :then (avy-goto-char-2-below))
   ("T" set-mark-command :then (avy-goto-char-2-above))
   ("h" set-mark-command :then (backward-char))
   ("j" set-mark-command :then (next-line))
   ("k" set-mark-command :then (previous-line))
   ("l" set-mark-command :then (forward-char))
   ("0" set-mark-command :then (sk/smarter-move-beginning-of-line))
   ("$" set-mark-command :then (move-end-of-line))
   ("g g" set-mark-command :then (beginning-of-buffer))
   ("G" set-mark-command :then (end-of-buffer))
   ("{" set-mark-command :then (backward-paragraph))
   ("}" set-mark-command :then (forward-paragraph))
   ("(" set-mark-command :then (backward-sentence))
   (")" set-mark-command :then (forward-sentence))
   ("e" set-mark-command :then (forward-word))
   ("b" set-mark-command :then (backward-word))
   ("s" sp-mark-sexp))))

;; mapping for narrowing
(sk/ryo-operator-object narrow-region "g n" "n" narrow-to-region t)
(sk/ryo-narrow-region-bindings)

;; mapping for narrowing and editing with iedit
(sk/ryo-operator-object iedit "v x" "x" iedit-mode)
(sk/ryo-iedit-bindings)
(defun sk/iedit-bindings ()
  (interactive)
  (ryo-modal-key "v x r" 'iedit-rectangle-mode)
  (ryo-modal-key "v x d" 'iedit-delete-occurrences)
  (ryo-modal-key "v x n" 'iedit-number-occurrences)
  (ryo-modal-key "v x p" 'iedit-blank-occurrences)
  (ryo-modal-key "v x u" 'iedit-upcase-occurrences)
  (ryo-modal-key "v x o" 'iedit-downcase-occurrences)
  (ryo-modal-key "v x y" 'iedit-replace-occurrences)
  (ryo-modal-key "'" 'iedit-expand-down-to-occurrence)
  (ryo-modal-key "g '" 'iedit-expand-up-to-occurrence)
  (ryo-modal-key "g \"" 'iedit-execute-last-modification)
  (ryo-modal-key "<" 'iedit-prev-occurrence)
  (ryo-modal-key ">" 'iedit-next-occurrence)
  (ryo-modal-key "g ," 'iedit-restrict-function)
  (ryo-modal-key "\"" 'iedit-restrict-current-line))
(add-hook 'iedit-mode-hook 'sk/iedit-bindings)

;; mapping for upcasing
(sk/ryo-operator-object upcase-region "g U" "U" upcase-region t)
(sk/ryo-upcase-region-bindings)

;; mapping for downcasing
(sk/ryo-operator-object downcase-region "g u" "u" downcase-region t)
(sk/ryo-downcase-region-bindings)

;; mapping for capitalizing
(sk/ryo-operator-object capitalize-region "g C" "C" capitalize-region t)
(sk/ryo-capitalize-region-bindings)

;; mapping for commenting
(sk/ryo-operator-object comment "g c" "c" comment-dwim-2)
(sk/ryo-comment-bindings)

;; mapping for filling region
(sk/ryo-operator-object fill-region "g q" "q" sk/fill-region t)
(sk/ryo-fill-region-bindings)

;; mapping for unfilling region
(sk/ryo-operator-object unfill-region "g Q" "Q" sk/unfill-region t)
(sk/ryo-unfill-region-bindings)

;; mapping for shell command
(sk/ryo-operator-object shell-region "!" "!" sk/shell-command-region-or-line t)
(sk/ryo-shell-region-bindings)

;; mapping for replacing region
(sk/ryo-operator-object replace-region "g r" "r" sk/replace-region-or-line)
(sk/ryo-replace-region-bindings)

;; mapping for yanking to clipboard
(sk/ryo-operator-object clip-copy-region "g y" "y" sk/copy-line-or-region-to-clipboard)
(sk/ryo-clip-copy-region-bindings)

;; mapping for pasting from clipboard
(sk/ryo-operator-object clip-replace-region "g r c" "c" sk/replace-region-or-line-with-clipboard)
(sk/ryo-clip-replace-region-bindings)

;; ;; mapping with polymode
;; (ryo-modal-key "`"
;; 			   '(("e" polymode-export)
;; 				 ("E" polymode-set-exporter)
;; 				 ("w" polymode-weave)
;; 				 ("W" polymode-set-weaver)
;; 				 ("t" polymode-tangle)
;; 				 ("T" polymode-set-tangler)
;; 				 ("o" polymode-show-process-buffer)
;; 				 ("j" polymode-next-chunk)
;; 				 ("k" polymode-previous-chunk)
;; 				 ("h" polymode-previous-chunk-same-type)
;; 				 ("l" polymode-next-chunk-same-type)
;; 				 ("d" polymode-kill-chunk)
;; 				 ("v" polymode-mark-or-extend-chunk)
;; 				 ("n" polymode-toggle-chunk-narrowing)
;; 				 ("i" polymode-insert-new-chunk)))

;; mapping with alignment prefix
(ryo-modal-key "g l"
               '(("l" align-regexp)
                 (":" sk/align-colon)
				 (";" sk/align-semicolon)
				 ("SPC" sk/align-whitespace)
                 ("=" sk/align-equals)
                 ("q" sk/align-quote-space)
                 ("," sk/align-comma)
                 ("." sk/align-dot)
                 ("%" sk/align-percent)
                 ("#" sk/align-hash)
                 ("&" sk/align-ampersand)))

;; mapping with semantic
(ryo-modal-key ","
               '(("," semantic-mode)
                 ("j" semantic-complete-jump)
                 ("r" semantic-symref-symbol)
                 ("s" semantic-symref-regexp)
                 ("c" semantic-calculate-scope)
                 ("g" semantic-debug)
                 ("t" semantic-speedbar-analysis)
                 ("h" semantic-describe-tag)
                 ("w" semantic-ia-describe-class)
                 ("d" semantic-ia-show-doc)
                 ("v" semantic-ia-show-variants)
                 ("m" semantic-ia-show-summary)
                 ("z" semantic-analyze-current-tag)
                 ("x" semantic-analyze-current-context)
				 ("n" senator-next-tag)
                 ("p" senator-previous-tag)
                 ("y" senator-copy-tag)
                 ("u" senator-go-to-up-reference)
                 ("b" semantic-describe-buffer)))

;; mapping for toggling options
(ryo-modal-key "c o"
               '(("f" flyspell-mode)
				 ("r" scroll-bar-mode)
				 ("c" company-mode)
				 ("d" diminish)
				 ("e" toggle-debug-on-error)
				 ("l" sk/dubcaps-mode)
                 ("n" display-line-numbers-mode)
				 ;; ("a" highlight-symbol-mode)
                 ;; ("b" display-battery-mode)
                 ("b" fancy-battery-mode)
                 ("a" anaconda-mode)
                 ("q" irony-mode)
                 ("t" display-time-mode)
                 ("i" indent-guide-mode)
                 ("j" anaconda-mode)
                 ("m" fci-mode)
                 ("h" visual-fill-column-mode)
				 ("v" visual-line-mode)
				 ("u" menu-bar-mode)
				 ("o" orgstruct-mode)
				 ("p" smartparens-mode)
				 ("s" smartparens-strict-mode)
				 ("w" subword-mode)
				 ("z" anzu-mode)
				 ("k" beacon-mode)
                 ("y" yas-global-mode)))

;; mapping for desktop mode
(ryo-modal-key "d o"
               '(("s" desktop-save)
                 ("r" desktop-read)
                 ("n" sk/make-desktop)
                 ("d" desktop-remove)
                 ("j" sk/desktop-jump)
                 ("o" desktop-change-dir)
                 ("m" desktop-save-mode)
                 ("i" desktop-save-in-desktop-dir)
                 ("c" desktop-clear)
                 ("v" desktop-revert)))

;; mapping for yasnippets
(ryo-modal-key "y o"
			   '(("a" yas-abort-snippet)
				 ("r" yas-reload-all)
				 ("t" yas-tryout-snippet)
				 ("j" yas-visit-snippet-file)
				 ("m" yas-minor-mode)
				 ("b" yas-load-snippet-buffer)
				 ("c" yas-load-snippet-buffer-and-close)
				 ("n" yas-new-snippet)))

;; mapping for visual options
(ryo-modal-key "v o"
			   '(("c" sk/courier-font)
				 ("g" sk/georgia-font)
				 ("h" sk/hack-font)
				 ("f" sk/monaco-font)
				 ("o" sk/consolas-font)
				 ("d" sk/deja-vu-font)
				 ("t" sk/tiny-type)
				 ("i" sk/miniscule-type)
				 ("s" sk/small-type)
				 ("m" sk/medium-type)
				 ("l" sk/large-type)))

;; provide this configuration
(provide 'sk-ryo-bindings)
